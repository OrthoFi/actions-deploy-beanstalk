name: Deploy Beanstalk Application
inputs:
  app-name:
    description: Name of the application (patient, user, etc.)
    required: true
  app-env-name:
    description: Name of the environment to deploy to (heart, dev, etc.)
    required: true
  aws-dev-build-role:
    description: secrets.OCKERS_BUILD_ROLE
    required: true
  aws-production-build-role:
    description: secrets.PRODUCTION_BUILD_ROLE
    required: true
  aws-access-key-id:
    description: secrets.BUILD_AWS_ACCESS_KEY_ID
    required: true
  aws-secret-access-key:
    description: secrets.BUILD_AWS_SECRET_ACCESS_KEY
    required: true
  sentry-auth-token:
    description: secrets.SENTRY_AUTH_TOKEN
    required: true

runs:
  using: composite
  steps:
    - name: Install AWS EBS CLI
      shell: bash
      run: dotnet tool install -g Amazon.ElasticBeanstalk.Tools

    - name: Restore
      uses: dawidd6/action-download-artifact@v2
      with:
        branch: ${{ github.ref }}
        name: beanstalk
        workflow_conclusion: success
        workflow: build.yml

    - name: Set AWS Role
      id: set-role
      uses: orthofi/actions-set-build-role@v1
      with:
        production-role: ${{ inputs.aws-production-build-role }}
        dev-role: ${{ inputs.aws-dev-build-role }}
        environment-name: ${{ inputs.app-env-name }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: us-east-1
        role-to-assume: ${{ steps.set-role.outputs.build-role }}

    - name: Deploy
      shell: bash
      run: |
        dotnet eb deploy-environment \
          -app ${{ inputs.app-name }}-api \
          -env ${{ inputs.app-name }}-api-${{ inputs.app-env-name }} \
          -pac beanstalk.zip \
          --version-label GHA-${{ github.run_number }} \
          --additional-options "aws:elasticbeanstalk:application:environment,SENTRY_RELEASE=${{ github.sha }}" \
          --disable-interactive true \
          --wait true

    - uses: actions/checkout@v2
    - name: Create Sentry release
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ inputs.sentry-auth-token }}
        SENTRY_ORG: orthofi
        SENTRY_PROJECT: service-${{ inputs.app-name }}
      with:
        environment: ${{ inputs.app-env-name }}
        version: ${{ github.sha }}
        ignore_empty: true
